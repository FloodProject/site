<?php

/**
 * @file
 * Install file for Node Example module.
 *
 */

require_once "Flood.php";
require_once "PackageMenu.php";

function FloodProject_install() {

    // Ensure the forum node type is available.
    node_types_rebuild();
    node_add_body_field(node_type_get_type(Flood::PACKAGE_NODE_TYPE));

    // Create all the fields we are adding to our content type.
    foreach (_FloodProject_installed_fields() as $field) {
        field_create_field($field);
    }

    // Create all the instances for our fields.
    foreach (_FloodProject_installed_instances() as $instance) {
        $instance['entity_type'] = 'node';
        $instance['bundle'] = Flood::PACKAGE_NODE_TYPE;
        field_create_instance($instance);
    }

}

/**
 * Implements hook_uninstall().
 *
 * This hook is called when the user not only has disabled the module,
 * but also uninstalls it from the 'uninstall' tab in the module page.
 *
 * So it's a perfect time to remove our fields and instances and new
 * node type from the database.
 *
 * @ingroup node_example
 */
function FloodProject_uninstall() {
    // Gather all the example content that might have been created while this
    // module was enabled.  Simple selects still use db_query().
    // http://api.drupal.org/api/function/db_query/7
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => Flood::PACKAGE_NODE_TYPE));
    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }

    // Delete all the nodes at once
    // http://api.drupal.org/api/function/node_delete_multiple/7
    node_delete_multiple($nids);

    // Loop over each of the fields defined by this module and delete
    // all instances of the field, their data, and the field itself.
    // http://api.drupal.org/api/function/field_delete_field/7
    foreach (array_keys(_FloodProject_installed_fields()) as $field) {
        field_delete_field($field);
    }

    // Loop over any remaining field instances attached to the node_example
    // content type (such as the body field) and delete them individually.
    // http://api.drupal.org/api/function/field_delete_field/7
    $instances = field_info_instances('node', Flood::PACKAGE_NODE_TYPE);
    foreach ($instances as $instance_name => $instance) {
        field_delete_instance($instance);
    }

    // Delete our content type
    // http://api.drupal.org/api/function/node_type_delete/7
    node_type_delete(Flood::PACKAGE_NODE_TYPE);

    // Purge all field infromation
    // http://api.drupal.org/api/function/field_purge_batch/7
    field_purge_batch(1000);
}

/**
 * Returns a structured array defining the fields created by this content type.
 */
function _FloodProject_installed_fields() {
    return array(
        Flood::CONTENT_TYPE_FIELD => array(
            'field_name' => Flood::CONTENT_TYPE_FIELD,
            'cardinality' => -1,
            'type' => 'list_boolean',
            'settings' => array(
                'allowed_values' => FloodContentType::get_allowed_values(),
            ),
        ),
    );
}

/**
 * Returns a structured array defining the instances for this content type.
 */
function _FloodProject_installed_instances() {
    return array(
        Flood::CONTENT_TYPE_FIELD => array(
            'field_name' => Flood::CONTENT_TYPE_FIELD,
            'label' => 'Content types',
            'description' => 'Select the cont types to be provided in your package page.',
            'widget' => array(
                'type' => 'options_buttons',
                'module' => 'options',
            ),
        ),
    );
}
